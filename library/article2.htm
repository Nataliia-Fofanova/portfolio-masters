<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN'>
<html>
  <head>
    <title>Склярова Н.А. - Klaus Lochmann, Stefan Wagner - A Quality Model for Software Quality</title>
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
    <link rel="stylesheet" type="text/css" href="../css/master_style.css">    

  </head>
  <body lang=ru >
                
<div id="maintext">

<a href="index.htm">Назад в библиотеку</a>
<br>
<hr>

<h1>Модель качества для программного обеспечения качества</h1>
<p style="text-indent: 0pt;"><b>Авторы:</b>Klaus Lochmann, Stefan Wagner<br>
<b>Источник:<a href="http://mediatum.ub.tum.de/download/1144893/1144893.pdf">http://mediatum.ub.tum.de/download/1144893/1144893.pdf</a></b><br>
<b>Перевод:</b>Склярова Н.А. </p>
</div>
                  
<div align='left'>
<h3>Аннотация</h3>
<p style="text-indent: 0pt; margin-left: 20pt;"><b>Klaus Lochmann, Stefan Wagner - A Quality Model for Software Quality</b><i> Большое количество терминов,
 описывающих аспекты качества программного обеспечения, которые назваются атрибутами качества, определены по таксономии в стандартах ISO 9126, как и ISO 25010. 
 Эти определения критикуются за неоднозначность, перекрытие и неполноту. Основываясь на опыте в качестве моделирования, разработали модель качества, 
 определяющую иерархию атрибутов качества. Она опирается на парадигму деятельности и тем самым делает использование четких критериев разложения.
 Рассматривается предположение, что это разложение решает некоторые проблемы таксономии.</i></p>
 
<h3>Модель качества</h3>

<p>В этой статье представлена модель, которая определяет атрибуты качества программных
 систем. Разработана модель качества деятельности, которая 
основывается на поддержании и генерации руководящих принципов
 и контрольных списков <a href='#ref2'>[2]</a>. </p>
 
 <p>В исследовательском проекте Quamoco, вместе с несколькими научно-исследовательскими
 и промышленными партнерами, была расширена сфера модели качества
за  счет ремонтопригодности и активно применили на автоматическом измерении и агрегации
.</p>
<p>Результаты измерений приведены в источниках <a href='#ref4'>[4]</a>,<a href='#ref8'>[8]</a>.</p>
<p>Исследование полезности деятельности на основе качества
модели для спецификации требований к качеству представлены в источниках <a href='#ref6'>[6]</a>,<a href='#ref7'>[7]</a>,
<a href='#ref5'>[5]</a> , а применение качества деятельности на основе
модели безопасности представлены в источниках <a href='#ref9'>[9]</a> , а юзабилити <a href='#ref10'>[10]</a>.</p>
</p><p>Представленная модель качества в этой статье основана на парадигме деятельности на основе 
моделей качества <a href='#ref2'>[2]</a>,<a href='#ref1'>[1]</a>.
Такие модели качества определяют его атрибуты качества, ссылаясь на мероприятия, которые 
проводятся с или в системе.
 Например, классический эксплуатационный атрибут качества, описан как
Эффективность и результативность проведения технического обслуживания деятельности.Преимущество 
рассуждения о деятельности в том, что она обеспечивает четкие критерии разложения: 
деятельность, может 
быть разложена в
суб-деятельность. Например, поддержание системы означает проведение следующих подвидов 
деятельности:
анализа запроса на изменение существующей системы, изменение системы, и выпуск
модифицированной системы. Это приводит к введению доступности анализа, модифицируемости и 
высвобождаемости как суб-характеристики качества эсплуатации.</p>
<p>В качестве отправной точки для развития модели качества, использовались
атрибуты качества
ISO 25010 <a href='#ref3'>[3]</a>. Пересмотрев их в соответствии с деятельностностью парадигмы,
 удаляются и добавляются новые термины в случае необходимости.</p>



<h3>Структура</h3>
<p>Основная часть разработанной модели качества состоит из дерева атрибутов качества. 
Это дерево
содержит все атрибуты качества, составляющие качества системы.
 Они были определены так, чтобы
не было перекрытий. Рисунок 1 показывает иерархию атрибутов качества.</p>
<p>Помимо основного дерева атрибутов качества, есть список вспомогательных показателей
 качества, которые разработаны так, что не
перекрываются с основными признаками качества. Каждый из этих атрибутов качества включает в 
себя несколько
из основных показателей качества или их частей. Например, атрибут вспомогательного качества
переносимости комбинации технологичности и возможность выпуска, в результате чего получаем
приспособляемость к специальному типу эксплуатации.</p>
<p>Третий вид показателей качества ортогонален к другим видам атрибутов качества. Они
представлены в виде отдельного списка.</p>


<h3>Основные атрибуты качества</h3>
<div class=img>
<img src="images/ph1.png" width=600 height=600 alt="Основные атрибуты качества">
<p class=imgcaption>Рисунок 1. – Основные атрибуты качества</p>
</div>
<p>Quality. Качество. Степень, в которой система удовлетворяет
потребности всех заинтересованных сторон.</p>
<p>Quality in End-Use. Качество конечного использования. Степень, в которой cистема удовлетворяет требованиям
конечного пользователя.</p>
<p>Usability. Юзабилити. Степень, в которой система позволяет эффективное использование системы пользователем. 
Использование системы включает в себя операционные функции(т.е. взаимодействующие с ней) и чтение (понимание документации).</p>
<p>Operability. Работоспособность. Степень, в которой система
позволяет эффективно выполнять работу пользователю.
Операция по конечному пользователю включает в себя
принесение вклада в систему и восприятие и понимание выходов системы.</p>
<p>Error protection. Защита от ошибок. Степень, в которой система
предостерегает конечного пользователя от плохого и/или от случайного входа в систему.</p>
<p>Accessibility. Доступность. Степень, в которой система
позволяет конечным пользователям с ограниченными возможностями эксплуатации эффективно и действенно справляться с системой.</p>
<p>Learnability. Обучаемость. Степень, в которой документация
системы подходит для эффективной работы системы.</p>
<p>Functional suitability. Функциональная пригодность. Степень, в которой
система обеспечивает функциональность, которая поддерживает
задачи конечного пользователя.</p>
<p>Functional correctness. Функциональная корректность. Степень, в которой
система обеспечивает получение правильных результатов с необходимой степенью точности.</p>
<p>Functional appropriateness. Функциональная целесообразность. Степень
которая позволяет выполнять функционирование системы и поддерживает выполняемые задачи конечного пользователя.</p>
<p>Functional completeness.Функциональная полнота. Степень, в которой
задачи конечного пользователя охвачены в
функциональности системы.</p>
<p>Time behavior. Поведение во времени. Степень, в которой система
удовлетворяет время отклика и
пропускную ставку.</p>
<p>Response time. Время отклика. Степень, в которой система
удовлетворяет требуемое время отклика.<p>
<p>Throughput.Пропускная способность. Степень, в которой система
удовлетворяет пропускную способность. </p>
<p>Reliability.Надежность. Вероятность системы, направленая на правильное функционирование в любое время.</p>
<p>Security.Безопасность. Степень, в которой система предотвращает
несанкционированным доступы=ом из (1) и чтение или модификация данных системы
(2) препятствует уполномоченному доступу от использования
системы.</p>
<p>Confidentiality.Конфиденциальность. Степень, в которой информация
и данные защищены от несанкционированного
доступа.</p>
<p>Integrity.Целостность. Степень, в которой система предотвращает
несанкционированное чтение или модификацию
данных.</p>
<p>Safety. Безопасность. "Степень, в которой продукт или
система не выполняет работу, при определенных условиях,
которые могут привести к состоянию, при котором человеческая жизнь,
здоровье, имущество или окружающая среда могут
находится под угрозой исчезновения "<a href='#ref3'>[3]</a>.</p>
<p>Economic damage risk. Экономический риск повреждения. "Степень ожидания
влияния вреда коммерческой недвижимости, операции или репутация, которые
предназначенные для контекста использования "<a href='#ref3'>[3]</a>.</p>
<p>Health and safety risk. Здоровье и риск безопасности. "Степень ожидания влияния вреда людям в предназначенные
контексты использования "<a href='#ref3'>[3]</a>.</p>
<p>Environmental harm risk. Риск нанесения ущерба окружающей среде. "Степень ожидается
влияния вреда имуществу или
среды в предназначенных контекстах
использования "<a href='#ref3'>[3]</a>.</p>
<p>Quality in Development and Evolution.Качество развития и эволюции.
Степень, в которой система удовлетворяет
требования заинтересованных сторон
с задачами в отношении развития
и эволюция системы.
Эволюция системы включает в себя поддержание
и издание.</p>
<p>Maintainability. Эффективность. Степень, в которой система
может поддерживаться эффективно и действенно.
Поддержание системы средства
модификации системы для коррекции
ошибки, ее улучшения, для предотвращения будущих
неисправностей или адаптировать продукт, чтобы удовлетворить требования, которые изменились.</p>
<p>Analyzability. Степень, в которой система
позволяет (1) изучение ее возможностей 
и объем запрашиваемой модификации и (2) DeVision предварительный план
для проектирования, реализации, тестирования и доставки.
<p>Modifiability. Модифицируемость. Степень, в которой система
может быть модифицирована с помощью результатов
этапа проектирования, кодирования, проектирования, создания системной документации.</p>
<p>Verifiability. Проверяемость. Степень, в которой система
позволяет проводить тест для удовлетворения
измененных требований.</p>
<p>Testability. Тестируемость. Степень, в которой система позволяет
проводить программные тесты для оценки
удовлетворение потребностей.</p>
<p>Reviewability. Способность подлежать пересмотру. Степень, в которой система
позволяет проводить обзоры.</p>
<p>Releaseability. Степень, в которой система
может быть эффективно использована и выпущена
для клиентов. Выпуск системы означает, у нее есть название, упаковка, выпуск версии и рекомендаци по установке,
которую используют клиенты для запускасистемы.</p>
<p>Configurability. Конфигурируемость. Степень, в которой
система может быть эффективно и
адаптированы к определенным обстоятельствам
посредством использования встроенной командой
системы; т.е. без изменения
Сама система.</p>
<p>Installability. Степень, в которой система
может быть эффективно использована и установлена
и/или удалена в указанной среде.
Степень, в которой система может
быть эффективно использована и используется как часть
из другой программы.</p>
<p>Quality in Operation.Качество работы. Степень, в которой
система удовлетворяет требования
заинтересованных сторон, связанные с операционной
системой. Операционная система включает операцию
аппаратных средств и оказание поддержки
конечным пользователям.</p>
<p>Executability. Эффективность, с которой
система может выполнять цели
оборудования.</p>
<p>CPU consumption.Потребление процессора. Эффективность, с которой
система использует вычислительные ресурсы
процессора.</p>
<p>Memory consumption.Потребление памяти. Эффективность, с
который система использует память
оборудования.</p>
<p>Co-existence.Сосуществование. Степень, в которой система
может сосуществовать с другими независимыми системами
в общей среде обмена
общими ресурсами без вреда и
последствий.</p>
<p>Supportability. Степень, в которой система
позволяет оказывать техническую помощь,
консультации с пользователем, запись
пользователя и просит поддержки и запуска
технического обслуживания.</p>
<p>Quality in Business.Качество бизнеса. Степень, в которой
система удовлетворяет требованиям
заинтересованных сторон, связанные с приобретением
программного обеспечения.</p>
<p>Appraisability. Степень, в которой 
эффективно поглощается оценка удовлетворенности системными требованиями.</p>


<h3>Вспомогательные атрибуты качества</h3>

<p>Adaptability. Адаптивность - особый тип обслуживания,
с целью адаптации системы к
удовлетворению изменившихся требований. Два других
специальных вида обслуживания являются корректирующими
и профилактичесими.
</p>
<p>Portability. Мобильность. Степень, в которой система
может быть эффективной и переданой
от аппаратного и программного обеспечения или
прочих операционных сред для использования окружающей среды. Перенос системы обеспечения средства
адаптирует его и сдает. Таким образом, переносимость
это сочетание технологичности и
легкой делимости.</p>
<p>Performance. Производительность - вбирает поведение времени,
на потребление процессора и потребление памяти.</p>



<h3>Ортогональные Атрибуты качества</h3>

<p>Satisfaction. Удовлетворение.Степень, в которой система
делает конечный пользователь чувствовать себя удовлетворенным с помощью
это.</p>
<p>Purposefullness.Степень, в которой конечный пользователь
"Удовлетворен их воспринимается
достижение прагматических целей, в том числе
приемлемые предполагаемые результаты использования
и последствия использования "[3].</p>
<p>Purposefullness.Доверие.Степень, в которой конечный пользователь "удовлетворен
что продукт будет вести себя как положено "
[3].</p>
<p> Trust. Доверие.Степень, в которой "конечный пользователь
получает доверие от выполнения их личной потребности"[3].</p>
<p>Привлекательность.Степень, в которой конечный пользователь
считает продукт быть привлекательными.</p>




<a name='lib'></a>
<h3>Список использованной литературы</h3>
<p style="text-indent: 0pt;"> 
<ol>
<li><a name="ref1">F. Deissenboeck. Continuous Quality Control of Long-Lived Software Systems, PhD thesis,
Technische Universitat Munchen. 2009.<br>
<li><a name="ref2">F. Deissenboeck, Stefan Wagner, M. Pizka, S. Teuchert, and J.-F. Girard. An Activity-Based
Quality Model for Maintainability. In Proc. of the International Conference on Software
Maintenance (ICSM ’07). IEEE Computer Society, October 2007.<br>
<li><a name="ref3">ISO. 25010, Systems and software engineering – System and software product Quality Requirements
and Evaluation (SQuaRE) – System and software quality models.<br>
<li><a name="ref4">K. Lochmann and L. Heinemann. Integrating Quality Models and Static Analysis for Comprehensive
Quality Assessment. In Proc. of the International Workshop on Emerging Trends
in Software Metrics (WETSoM ’11). ACM, May 2011.<br>
<li><a name="ref5">K. Lochmann, D. Mendez Fernandez, and S. Wagner. A case study on specifying quality
requirements using a quality model. In Proc. of the Asia-Pacific Software Engineering
Conference (APSEC 2012). IEEE Computer Society, December 2012.<br>
<li><a name="ref6">S. Wagner, F. Deissenboeck, and S. Winter. Erfassung, Strukturierung und uberprufung von
Qualitatsanforderungen durch aktivitatenbasierte Qualitatsmodelle. In Proc. of the Software
Engineering Konferenz (SE ’08). GI, February 2008.<br>
<li><a name="ref7">S. Wagner, F. Deissenboeck, and S. Winter. Managing quality requirements using
activity-based quality models. In Proc. of the International Workshop on Software Quality
(WoSQ ’08). ACM, May 2008.<br>
</ol>
</p>
</div>
